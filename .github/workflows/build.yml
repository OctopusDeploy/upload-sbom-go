name: Build and Release SBOM Uploader

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.2.3

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Cross-Platform Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist/
          OUTPUT=sbom-uploader-${GOOS}-${GOARCH}
          if [ "$GOOS" = "windows" ]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          go build -o dist/$OUTPUT ./main.go

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t sbom-uploader:${{ steps.vars.outputs.VERSION }} .

      - name: Tag and Push to GHCR
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/sbom-uploader
          docker tag sbom-uploader:${{ needs.version.outputs.new_tag }} $IMAGE:${{ needs.version.outputs.new_tag }}
          docker tag sbom-uploader:${{ needs.version.outputs.new_tag }} $IMAGE:latest
          docker push $IMAGE:${{ needs.version.outputs.new_tag }}
          docker push $IMAGE:latest

      - name: Save image as tar
        run: |
          docker save sbom-uploader:${{ needs.version.outputs.new_tag }} -o dist/sbom-uploader.tar
          mkdir -p dist
          mv sbom-uploader.tar dist/

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: dist/sbom-uploader.tar


  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, docker]

    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: release-assets/

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "SBOM Uploader ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
